# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  _id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String
  username: String
  email: String
  password: String
  picture: String
  role: String!
  tenant: Tenant!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type TenantAddress {
  zipCode: String
  street: String
  complement: String
  number: String
  city: String
  state: String
}

type Tenant {
  _id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  email: String
  picture: String
  socialReason: String
  phone: String
  mobilePhone: String
  cpfCnpj: String
  address: TenantAddress
  municipalInscription: String
  stateInscription: String
  users: [User!]!
}

type UserConnection {
  docs: [User!]
  totalDocs: Int!
  limit: Int!
  totalPages: Int!
  page: Int!
  pagingCounter: Int!
  hasPrevPage: Boolean!
  hasNextPage: Boolean!
  prevPage: Int
  nextPage: Int
  hasMore: Boolean!
}

type AuthResponse {
  token: String!
  refreshToken: String!
  user: User!
}

type TenantConnection {
  docs: [Tenant!]
  totalDocs: Int!
  limit: Int!
  totalPages: Int!
  page: Int!
  pagingCounter: Int!
  hasPrevPage: Boolean!
  hasNextPage: Boolean!
  prevPage: Int
  nextPage: Int
  hasMore: Boolean!
}

type Query {
  health: String!
  listUsers(page: Int, limit: Int, sort: String, offset: Int, maxTimeMS: Int): UserConnection!
  getUser(query: GetUserInput!): User!
  listTenants(page: Int, limit: Int, sort: String, offset: Int, maxTimeMS: Int): TenantConnection!
  getTenant(query: GetTenantInput!): Tenant!
}

input GetUserInput {
  _id: String
}

input GetTenantInput {
  _id: String
}

type Mutation {
  login(data: LoginInput!): AuthResponse!
  refreshToken: AuthResponse!
  createUser(data: CreateUserInput!): User!
  removeUser(id: String!): User!
  updateUser(data: UpdateUserInput!, id: String!): User!
  updateUserPassword(data: UpdatePasswordInput!, id: String!): User!
  createTenant(data: CreateTenantInput!): Tenant!
  removeTenant(id: String!): Tenant!
  updateTenant(data: UpdateTenantInput!, id: String!): Tenant!
}

input LoginInput {
  username: String
  password: String!
}

input CreateUserInput {
  role: String!
  tenant: String
  name: String
  username: String
  email: String
  password: String!
  picture: String
}

input UpdateUserInput {
  role: String!
  username: String
  email: String
  name: String
  picture: String
}

input UpdatePasswordInput {
  password: String!
  confirmPassword: String!
}

input CreateTenantInput {
  name: String
  email: String
  picture: String
  socialReason: String
  phone: String
  mobilePhone: String
  cpfCnpj: String
  address: TenantAddressInput
  municipalInscription: String
  stateInscription: String
}

input TenantAddressInput {
  zipCode: String
  street: String
  complement: String
  number: String
  city: String
  state: String
}

input UpdateTenantInput {
  name: String
  email: String
  picture: String
  socialReason: String
  phone: String
  mobilePhone: String
  cpfCnpj: String
  address: TenantAddressInput
  municipalInscription: String
  stateInscription: String
}
